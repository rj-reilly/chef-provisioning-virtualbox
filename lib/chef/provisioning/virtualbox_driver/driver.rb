require 'chef/provisioning/driver'
require 'chef/provisioning/virtualbox_driver/version'

class Chef
module Provisioning
module VirtualboxDriver
  class Driver < Chef::Provisioning::Driver

    # generated by script, required by API.
    def self.canonicalize_url(driver_url, config)
      [ "vbox:#{driver_url} [vboxmanage]", config ]
    end

    # generated by script, required by API.
    def self.from_url(driver_url, config)
      Driver.new(driver_url, config)
    end

    def virtualbox
      Virtualbox.connect('/usr/local/bin/vboxmanage')
    end
  end


  def Virtualbox.create_server(name, machine_options)
      machine_spec.reference['server_id'] = %x(/usr/local/bin/createvm-q.sh "#{name}" 10)
  end

  def allocate_machine(action_handler, machine_spec, machine_options)
    if machine_spec.reference
      if !Virtualbox.server_exists?(machine_spec.reference['server_id'])
        action_handler.perform_action "Machine #{machine_spec.reference['server_id']} does not exist.  Recreating ..." do
          machine_spec.reference = nil
        end
      end
    end
    if !machine_spec.reference
      action_handler.perform_action "Creating server #{machine_spec.name} with options #{machine_options}" do
        private_key = get_private_key('bootstrapkey')
        server_id = Virtualbox.create_server(machine_spec.name, machine_options, :bootstrap_ssh_key => private_key)
        machine_spec.reference = {
          'driver_url' => driver_url,
          'driver_version' => VirtualboxDriver::VERSION,
          'server_id' => server_id,
          'bootstrap_key' => 'bootstrapkey'
        }
      end
    end
  end



end
end
end
